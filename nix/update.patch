diff --git a/format.scm b/format.scm
index 3da1a36..55a112e 100644
--- a/format.scm
+++ b/format.scm
@@ -117,22 +117,22 @@
       y)))
 
    ; Sort cases
-   (set! x
-         (map-rec y x
-          (if (and (car? 'case y)
-                   (length? 2 y))
-           (cons* (car y) (cadr y) (sort (cddr y) value<))
-           y)))
+   ;; (set! x
+   ;;       (map-rec y x
+   ;;        (if (and (car? 'case y)
+   ;;                 (length? 2 y))
+   ;;         (cons* (car y) (cadr y) (sort (cddr y) value<))
+   ;;         y)))
 
    ; Sort functions
-   (set! x
-         (map-rec y x
-          (if (list? y)
-           (concatenate (for zs (frag defun? y)
-                         (if (defun? (car zs))
-                          (sort zs value<)
-                          zs)))
-           y)))
+   ;; (set! x
+   ;;       (map-rec y x
+   ;;        (if (list? y)
+   ;;         (concatenate (for zs (frag defun? y)
+   ;;                       (if (defun? (car zs))
+   ;;                        (sort zs value<)
+   ;;                        zs)))
+   ;;         y)))
 
    ; Sort macros
    (set! x
@@ -175,6 +175,50 @@
                     (list (car zs)))
                    (cdr zs)))))
 
+   ; Blank line after use-modules
+   (set! x
+         (map-rec y x
+          (transform zs y
+           (values (if (and (car? 'use-modules (car zs))
+                            (pair? (cdr zs))
+                            (not (car? 'use-modules (cadr zs))))
+                    (list (car zs) blank-symbol)
+                    (list (car zs)))
+                   (cdr zs)))))
+
+   ; Blank line after define-module
+   (set! x
+         (map-rec y x
+          (transform zs y
+           (values (if (and (car? 'define-module (car zs))
+                            (pair? (cdr zs))
+                            (not (car? 'define-module (cadr zs))))
+                    (list (car zs) blank-symbol)
+                    (list (car zs)))
+                   (cdr zs)))))
+
+   ; Blank line after define-immutable-record-type
+   (set! x
+         (map-rec y x
+          (transform zs y
+           (values (if (and (car? 'define-immutable-record-type (car zs))
+                            (pair? (cdr zs))
+                            (not (car? 'define-immutable-record-type (cadr zs))))
+                    (list (car zs) blank-symbol)
+                    (list (car zs)))
+                   (cdr zs)))))
+
+   ; Blank line after define*
+   (set! x
+         (map-rec y x
+          (transform zs y
+           (values (if (and (car? 'define* (car zs))
+                            (pair? (cdr zs))
+                            (not (car? 'define* (cadr zs))))
+                    (list (car zs) blank-symbol)
+                    (list (car zs)))
+                   (cdr zs)))))
+
    ; Blank line before include
    (set! x
          (map-rec y x
@@ -266,6 +310,7 @@
                    (cdr zs)))))
 
    ; Remove multiple blanks
+   ;; TODO: this removes ALL blanks, not just multiple blanks
    (set! x
          (map-rec y x
           (transform zs y
